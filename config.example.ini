[General]
# Excel 文件路径
excel_file_path = Serial-Number.xlsx
# Excel 工作表名
sheet_name = Sheet1
# 包含序列号的列名
sn_column_name = Serial Number
# 查询间隔时间 (秒)，避免请求过快被屏蔽
query_delay = 2
# 定期保存间隔 (处理多少个序列号后保存一次，0 或负数表示不定期保存，仅最后保存)
save_interval = 10
# ChromeDriver 路径 (如果未添加到系统环境变量中，需要指定路径, 留空则自动检测)
# 例如: /path/to/your/chromedriver 或 C:\path\to\chromedriver.exe
chrome_driver_path =
# 单个序列号最大查询尝试次数 (包括首次尝试)
max_query_attempts = 3
# 单次查询中，验证码识别失败后的最大刷新重试次数
max_captcha_retries = 2

[CaptchaSettings]
# 验证码识别设置
# 优先使用的识别器 ('ddddocr' 或 'ai')
captcha_primary_solver = ddddocr
# 是否启用 ddddocr 本地识别 (True/False)
captcha_enable_ddddocr = True
# 是否启用 AI 识别 (True/False)
captcha_enable_ai = True
# ddddocr 识别的最大尝试次数 (每次获取新验证码图片时)
ddddocr_max_attempts = 3

[ResultColumns]
# 定义需要从查询结果中提取并写入 Excel 的列名
# 格式: Excel列名 = 网页字段标识符 (此处的标识符是占位符, 需要后续分析实际结果页面确定)
# 您可以根据需要添加、删除或修改这些列
型号 = 型号
服务名称 = 服务名称
设备类型 = 设备类型
保修开始时间 = 保修开始时间
保修结束时间 = 保修结束时间
保修剩余天数 = 保修剩余天数
保修状态 = 保修状态
# 查询状态列是固定的，用于记录查询成功、失败或错误信息
查询状态 = 查询状态

[AI_Settings]
# AI 识别验证码的重试次数 (每个渠道尝试次数)
retry_attempts = 3
# AI 识别验证码的重试间隔 (秒)
retry_delay = 5
# 频率限制等待时间 (秒)，当遇到 429 错误时使用
rate_limit_delay = 30
# AI 渠道可用性测试超时时间 (秒)
ai_test_timeout = 120

# --- AI 渠道实例配置 (按 channel_N_ 的数字顺序尝试) ---
# 请在 [AI_Settings] 配置节下，使用 'channel_N_' 前缀来配置每个AI渠道实例。
# 程序将自动查找所有以 'channel_N_' 开头的配置项，并按数字 N 的顺序尝试。
# 用户可以参照以下格式自行添加更多渠道实例，无需修改任何计数。
# 注意：所有用于验证码识别的AI模型必须支持图像输入 (Vision 模型)。

# 渠道 1 (主 Gemini Key)
channel_1_api_type = gemini
channel_1_api_key = YOUR_GEMINI_API_KEY_HERE
channel_1_model_name = gemini-2.5-pro
# Gemini 的视觉模型

# 渠道 2 (备用 Gemini Key)
channel_2_api_type = gemini
channel_2_api_key = YOUR_BACKUP_GEMINI_API_KEY_HERE
channel_2_model_name = gemini-2.5-flash
# 可以使用相同的模型或不同的视觉模型

# 渠道 3 (官方 OpenAI)
channel_3_api_type = openai
channel_3_api_key = YOUR_OPENAI_API_KEY_HERE
channel_3_model_name = gpt-4o # OpenAI 的视觉模型
# channel_3_base_url = https://api.openai.com/v1
# 官方 API 通常不需要设置 base_url

# 渠道 4 (Grok API - OpenAI 兼容)
channel_4_api_type = openai
channel_4_api_key = YOUR_GROK_API_KEY_HERE
channel_4_model_name = grok-1.0-vision
# Grok 的视觉模型 (示例名称，请查阅 Grok 文档确认)
channel_4_base_url = https://api.groq.com/openai/v1
# Grok 的 OpenAI 兼容 API 地址

# 渠道 5 (本地 Ollama - OpenAI 兼容)
channel_5_api_type = openai
channel_5_api_key = ignore
# 本地服务可能不需要 API Key，但为了兼容性保留
channel_5_model_name = llama3-vision
# Ollama 中支持图像输入的模型名称 (示例名称，请查阅 Ollama 文档确认)
channel_5_base_url = http://localhost:11434/v1
# Ollama 的默认 API 地址

# 渠道 6 (本地 LM Studio - OpenAI 兼容)
channel_6_api_type = openai
channel_6_api_key = ignore
# 本地服务可能不需要 API Key
channel_6_model_name = your_lmstudio_vision_model
# LM Studio 中支持图像输入的模型名称 (示例名称)
channel_6_base_url = http://localhost:1234/v1
# LM Studio 的默认 API 地址 (请根据您的设置确认)

# 渠道 7 (其他Gemini渠道 - 可选)
# channel_7_api_type = gemini
# channel_7_api_key = YOUR_OTHER_GEMINI_KEY
# channel_7_model_name = gemini-2.5-flash-preview-04-17

# 渠道 8 (心流平台 Iflow - OpenAI兼容接口，推荐使用)
# 💡 免费使用：心流开放平台提供免费API额度，可用于图像识别
# 📝 获取API Key：https://platform.iflow.cn/profile?tab=apiKey
# 🔗 接口文档：https://platform.iflow.cn/document
# channel_8_api_type = openai
# channel_8_api_key = YOUR_IFLOW_API_KEY
# channel_8_model_name = qwen3-vl-plus
# channel_8_base_url = https://apis.iflow.cn/v1
# 💡 说明：qwen3-vl-plus 是强大的视觉语言模型，支持图像识别和分析

[Logging]
# 日志文件路径 (留空则只输出到控制台)
log_file = app.log
# 日志级别: DEBUG, INFO, WARNING, ERROR, CRITICAL
log_level = INFO
# 是否在控制台输出日志 (True/False)
log_to_console = True
# 日志文件最大大小 (支持 KB/MB 单位, 例如 1024KB 或 1MB, 默认为 1024KB)
log_max_bytes = 1024KB
# 保留的备份日志文件数量
log_backup_count = 5
